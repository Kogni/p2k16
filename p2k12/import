#!/bin/bash

psql "user=p2k16-admin password=p2k16-admin dbname=p2k16 host=localhost" <<EOF

BEGIN;
DROP SCHEMA IF EXISTS p2k12 CASCADE;
CREATE SCHEMA p2k12;

CREATE TABLE p2k12.accounts (
  id          BIGINT,
  name        TEXT,
  type        TEXT,
  last_billed TEXT
);

CREATE TABLE p2k12.auth (
  account BIGINT,
  realm   TEXT,
  data    TEXT
);

CREATE TABLE p2k12.members (
  id           BIGINT,
  date         TEXT,
  full_name    TEXT,
  email        TEXT,
  account      BIGINT,
  organization TEXT,
  price        TEXT,
  recurrence   TEXT,
  flag         TEXT
);

\copy p2k12.accounts from 'p2k12/p2k12_accounts.csv' with csv header
\copy p2k12.auth from 'p2k12/p2k12_auth.csv' with csv header
\copy p2k12.members from 'p2k12/p2k12_members.csv' with csv header

CREATE VIEW p2k12.active_members AS
  SELECT DISTINCT ON (m.account)
    m.id,
    m.date,
    m.full_name,
    m.email,
    m.price,
    m.recurrence,
    m.account,
    m.organization,
    m.flag
  FROM p2k12.members m
  ORDER BY m.account, m.id DESC;

CREATE VIEW p2k12.duplicate_emails AS
  SELECT email
  FROM p2k12.active_members
  GROUP BY email
  HAVING count(email) > 1
  ORDER BY email;

COMMIT;

BEGIN;

DELETE FROM public.circle_member_version;
DELETE FROM public.circle_member;
DELETE FROM public.circle;
DELETE FROM public.account;

INSERT INTO public.account (id, username, email, password, name, phone)
  SELECT *
  FROM (
         SELECT
           m.id :: BIGINT AS id,
           --TODO:     m.date         AS created_date,
           a.name         AS username,
           m.email        AS email,
           auth.data      AS password,
           m.full_name    AS name,
           m.price        AS price
         --     m.recurrence,
         FROM p2k12.active_members m
           INNER JOIN p2k12.accounts a ON m.account = a.id
           INNER JOIN p2k12.auth auth ON a.id = auth.account
         WHERE 1 = 1
               AND auth.realm = 'door'
               AND a.type = 'user'
           -- TODO: there shouldn't be any duplicate email addresses
               AND m.email NOT IN (SELECT email
                                FROM p2k12.duplicate_emails)
       ) AS account
  ORDER BY account.username;

COMMIT;
EOF
